server:
  port: 80

spring:
  application:
    name: cloud-order-service
#  zipkin:
#      base-url: http://localhost:9411
#  sleuth:
#    sampler:
#    #\u91C7\u6837\u7387\u503C\u4ECB\u4E8E 0 \u5230 1 \u4E4B\u95F4\uFF0C1 \u5219\u8868\u793A\u5168\u90E8\u91C7\u96C6
#    probability: 1
#  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource            # \u5F53\u524D\u6570\u636E\u6E90\u64CD\u4F5C\u7C7B\u578B
#    driver-class-name: org.gjt.mm.mysql.Driver              # mysql\u9A71\u52A8\u5305
#    url: jdbc:mysql://localhost:3306/db2020?useUnicode=true&characterEncoding=utf-8&useSSL=false
#    username: root
#    password: root


eureka:
  client:
    #表示是否将自己注册进Eureka Server 默认为true
    register-with-eureka: true
    #表示是否从注册中心抓取已有的服务注册信息，单节点无所谓，集群必须配置为true
    fetchRegistry: true
    service-url:
#      defaultZone: http://localhost:7001/eureka
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka,http://eureka7003.com:7003/eureka
  instance:
      #主机实例名称
      instance-id: consumer80
      #访问路径是否显示ip地址
      prefer-ip-address: true
#      #Eureka\u5BA2\u6237\u7AEF\u5411\u670D\u52A1\u7AEF\u53D1\u9001\u5FC3\u8DF3\u7684\u65F6\u95F4\u95F4\u9694\uFF0C\u5355\u4F4D\u4E3A\u79D2(\u9ED8\u8BA4\u662F30\u79D2)
#      #lease-renewal-interval-in-seconds: 1
#      #Eureka\u670D\u52A1\u7AEF\u5728\u6536\u5230\u6700\u540E\u4E00\u6B21\u5FC3\u8DF3\u540E\u7B49\u5F85\u65F6\u95F4\u4E0A\u9650\uFF0C\u5355\u4F4D\u4E3A\u79D2(\u9ED8\u8BA4\u662F90\u79D2)\uFF0C\u8D85\u65F6\u5C06\u5254\u9664\u670D\u52A1
#      #lease-expiration-duration-in-seconds: 2


#mybatis:
#  mapperLocations: classpath:mapper/*.xml
#  type-aliases-package: com.itoyoung.springcloud.entities    # \u6240\u6709Entity\u522B\u540D\u7C7B\u6240\u5728\u5305


